'TestPalletTrackingDAL
Option Strict On
Option Explicit On

Imports System.Data
Imports System.Data.SqlClient

Public Class TestPalletTrackingDAL
    Inherits PalletTrackingDAL

    ' Override to return test data instead of hitting database
    Public Overrides Function GetScannedPallets(ByVal shipmentId As String) As DataTable
        Dim dt As New DataTable()
        dt.Columns.Add("PalletID", GetType(String))
        dt.Columns.Add("PackOrderNo", GetType(String))
        dt.Columns.Add("ScanTime", GetType(DateTime))

        ' Add test data
        dt.Rows.Add("01", "TEST_ORDER_1", DateTime.Now.AddMinutes(-30))
        dt.Rows.Add("03", "TEST_ORDER_2", DateTime.Now.AddMinutes(-15))

        Return dt
    End Function

    Public Overrides Function GetTotalPalletsForShipment(ByVal shipmentId As String) As Integer
        ' Return test value
        Return 5
    End Function
End Class


'editnormalDAL

Public Class PalletTrackingDAL
    Private ReadOnly _sqlConnectionString As String
    Private ReadOnly _oracleConnectionString As String

    Public Sub New()
        _sqlConnectionString = ConfigurationManager.AppSettings("SQLConnectionString")
        _oracleConnectionString = ConfigurationManager.AppSettings("ConnectionStringShipmentTracking")
    End Sub

    ' Make methods overridable
    Public Overridable Function GetScannedPallets(ByVal shipmentId As String) As DataTable
        Dim dt As New DataTable()
        
        Using conn As New SqlConnection(_sqlConnectionString)
            Dim cmd As New SqlCommand("SELECT PalletID, PackOrderNo, ScanTime FROM ShipmentTracking WHERE ShipmentID = @ShipmentID ORDER BY PalletID", conn)
            cmd.Parameters.AddWithValue("@ShipmentID", shipmentId)
            
            Try
                conn.Open()
                Using reader As SqlDataReader = cmd.ExecuteReader()
                    dt.Load(reader)
                End Using
            Catch ex As Exception
                Throw New Exception("Error getting scanned pallets: " & ex.Message, ex)
            End Try
        End Using
        
        Return dt
    End Function

    Public Overridable Function GetTotalPalletsForShipment(ByVal shipmentId As String) As Integer
        Using conn As New OracleConnection(_oracleConnectionString)
            Dim cmd As New OracleCommand("SELECT TOTALPALLETS FROM SHIPMENTTRACKING WHERE BAY = :ShipmentID AND ACTIVE = '1'", conn)
            cmd.Parameters.Add(New OracleParameter("ShipmentID", shipmentId))
            
            Try
                conn.Open()
                Dim result As Object = cmd.ExecuteScalar()
                If result IsNot Nothing AndAlso Not IsDBNull(result) Then
                    Return Convert.ToInt32(result)
                End If
                Return 0
            Catch ex As Exception
                Throw New Exception("Error getting total pallets: " & ex.Message, ex)
            End Try
        End Using
    End Function
End Class

'web config and PalletDetails
<appSettings>
    <!-- Other settings -->
    <add key="UseTestData" value="True"/>
</appSettings>

Partial Class PalletDetails
    Inherits System.Web.UI.Page

    Private _palletTrackingDAL As PalletTrackingDAL

    Protected Sub Page_Init(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Init
        ' Check if we should use test data
        If ConfigurationManager.AppSettings("UseTestData") = "True" Then
            _palletTrackingDAL = New TestPalletTrackingDAL()
        Else
            _palletTrackingDAL = New PalletTrackingDAL()
        End If
    End Sub

    ' Rest of your code remains the same...
End Class


